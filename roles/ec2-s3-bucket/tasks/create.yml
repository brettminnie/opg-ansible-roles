---
- name: Generate bucket suffix
  include: suffix.yml

- block:
    - name: Create S3 buckets with policy
      s3_bucket:
        name: "{{ item.name }}"
        state: present
        policy: "{{ lookup('template','s3_bucket_policy.json')| to_json }}"
        versioning: "{{ item.versioning | default(false)}}"
        tags:
          stack: "{{ opg_data.stack }}"
      with_items: "{{ s3_buckets | default([]) }}"
      when: item.policy is defined
      register: s3_bucket_created

    - name: Create S3 buckets without policy
      s3_bucket:
        name: "{{ item.name }}"
        state: present
        versioning: "{{ item.versioning | default(false)}}"
        tags:
          stack: "{{ opg_data.stack }}"
      with_items: "{{ s3_buckets | default([]) }}"
      when: item.policy is undefined
      register: s3_bucket_created

    - name: Create S3 bucket lifecyle without suffix
      s3_lifecycle:
        name: "{{ item.name }}"
        rule_id: "{{ item.lifecycle.rule_id | default(omit)}}"
        expiration_date: "{{ item.lifecycle.expiration_date | default(omit)}}"
        expiration_days: "{{ item.lifecycle.expiration_days | default(omit)}}"
        prefix: "{{ item.lifecycle.prefix | default(omit)}}"
        status: "{{ item.lifecycle.status | default(omit)}}"
        state: "{{ item.lifecycle.state | default(omit)}}"
        storage_class: "{{ item.lifecycle.storage_class | default(omit)}}"
        transition_date: "{{ item.lifecycle.transition_date | default(omit)}}"
        transition_days: "{{ item.lifecycle.transition_days | default(omit)}}"
      with_items: "{{ s3_buckets | default([]) }}"
      when: "'lifecycle' in item"

  when: s3_bucket_suffix is not defined or not s3_bucket_suffix

- block:
    - name: Create S3 buckets with policy
      s3_bucket:
        name: "{{ [item.name, s3_bucket_suffix]|join('-') }}"
        state: present
        policy: "{{ lookup('template','s3_bucket_policy.json')| to_json }}"
        versioning: "{{ item.versioning | default(false)}}"
        tags:
          stack: "{{ opg_data.stack }}"
      with_items: "{{ s3_buckets | default([]) }}"
      when: item.policy is defined
      register: s3_bucket_created

    - name: Create S3 buckets without policy
      s3_bucket:
        name: "{{ [item.name, opg_data.stack]|join('-') }}"
        state: present
        versioning: "{{ item.versioning | default(false)}}"
        tags:
          stack: "{{ opg_data.stack }}"
      with_items: "{{ s3_buckets | default([]) }}"
      when: item.policy is undefined
      register: s3_bucket_created

    - name: Create S3 bucket lifecyle with suffix
      s3_lifecycle:
        name: "{{ [item.name, s3_bucket_suffix]|join('-') }}"
        rule_id: "{{ item.lifecycle.rule_id | default(omit)}}"
        expiration_date: "{{ item.lifecycle.expiration_date | default(omit)}}"
        expiration_days: "{{ item.lifecycle.expiration_days | default(omit)}}"
        prefix: "{{ item.lifecycle.prefix | default(omit)}}"
        status: "{{ item.lifecycle.status | default(omit)}}"
        state: "{{ item.lifecycle.state | default(omit)}}"
        storage_class: "{{ item.lifecycle.storage_class | default(omit)}}"
        transition_date: "{{ item.lifecycle.transition_date | default(omit)}}"
        transition_days: "{{ item.lifecycle.transition_days | default(omit)}}"
      with_items: "{{ s3_buckets | default([]) }}"
      when: "'lifecycle' in item"

  when: s3_bucket_suffix is defined and s3_bucket_suffix
